body {
    background: rgba(0, 0, 0, 0.01);
    font-family: Verdana, sans-serif;
}

.container {
    width: 960px;
    margin: 0 auto;
    font-size: 100%;
    line-height: 1.5;
}


/*CLEAR FIX SOLLUTION*/

.clearfix:before,
.clearfix:after {
    content: " ";
    /* 1 */
    display: table;
    /* 2 */
}

.clearfix:after {
    clear: both;
}


/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */

.clearfix {
    *zoom: 1;
}
/*****************************************************************************
The default display of elements on your page is called "stacked"

to get your element on the same line we use something called "flexbox"
to invoke flexbox, use the rule 
    display: flex;


flexbox attempts to place all elements within its immediate specified container
area on the same line

Immediate? That is the next level of elements
flexbox will automatically adjust measurements to get all elements to appear
on the same line. Regardless of the physical width set for the element

problem: I don't want all elements on the same line having their measurements 
altered
solution: alter the default wrapping for flexbox which is nothing

rule: flex-wrap: wrap;
this will place many elements as possible on a single row without adjusting
the measurements of your elements
any leftover elements will wrap to the following line until all elements
have been displayed
WARNING: Flex wrap affect a flex display area. Without the display, flex rule,
flex wrap is meaningless

flexbox will affect positioning that is normal within your page such as margin
collapse
******************************************************************************/
main{
    background-color:lightgrey;
    display: flex;
}
footer{
    background-color:lightgrey;
    display: flex;
}
/**
give the classes some height and width due to the fact that the elements  do not contain any text tool content
set height to a chosen value  of 300px
set the width of each box to fit the final given image
margin set to 30px
padding and border are = 0 no padding no border
page width is 960

page width = n(columns) x (box) + remainder
960 = 2 x (box) + (box) + remainder
our boxes are an equal side
960 = 2 x (lm + lb + lp + content + rm + rb + rp) + remainder
960 = 2 x (30 + 0 + 0 +0 + content + 0 + 0 + 0) + 30
960 = 60 + 30 + 2content
960 - 90 = 2content
870 / 2 = content
465 = content
*/
.red-paint{
    height:300px;
    width: 435px;
    background-color: red;
    margin-left: 30px;
    margin-top:30px;
    margin-bottom: 30px;
}
.blue-paint{
    height:300px;
    width: 435px;
    background-color: blue;
    margin: 30px 0 30px  30px;
}
.black-paint{
    height:50px;
    width: 900px;
    background-color:black;
    margin: 30px 0px 30px 30px;
}
